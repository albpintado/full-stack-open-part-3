{"version":3,"sources":["services/personService.js","components/HeaderOne.js","components/Search.js","components/Header.js","components/Notification.js","components/HeaderTwo.js","components/Input.js","components/Form.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","addPerson","person","post","deletePerson","personId","delete","updatePhone","personName","personNumber","put","name","number","HeaderOne","props","text","Search","type","setFilterQuery","onSubmit","event","preventDefault","className","htmlFor","onChange","value","target","placeholder","Header","Notification","message","class","HeaderTwo","Input","Form","newPerson","setNewPerson","handleInput","Persons","persons","deleteFunction","map","onClick","App","useState","setPersons","filterQuery","filteredPersons","filter","toLowerCase","includes","searchPersons","setMessage","useEffect","initialPersons","catch","error","console","log","handleMessage","updateNumber","personToUpdate","find","personIndex","findIndex","id","newPersons","messageText","messageClass","setTimeout","window","confirm","windowConfirmForUpdate","personFromState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73d2b75d.chunk.js","sourcesContent":["import axios from \"axios\";\n// Dev env\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\n// Prod env\n// const baseUrl = \"https://cryptic-river-73645.herokuapp.com/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst addPerson = (person) => {\n  axios.post(baseUrl, person);\n  return;\n};\n\nconst deletePerson = (personId) => {\n  axios.delete(`${baseUrl}/${personId}`);\n  return;\n};\n\nconst updatePhone = (personId, personName, personNumber) => {\n  const request = axios.put(`${baseUrl}/${personId}`, {\n    name: personName,\n    number: personNumber,\n  });\n  return request.then((response) => response.data);\n};\n\nconst personService = { getAll, addPerson, deletePerson, updatePhone };\n\nexport default personService;\n","const HeaderOne = (props) => <h1>{props.text}</h1>;\n\nexport default HeaderOne;\n","const Search = ({ type, setFilterQuery }) => {\n\n  const handleInput = (event) => {\n    const { value } = event.target;\n    setFilterQuery(value);\n  }\n  return (\n    <form onSubmit={(event) => event.preventDefault()} className=\"search-form\">\n      <label htmlFor={type}>Search name</label>\n      <input\n        name={type}\n        onChange={handleInput}\n        placeholder=\"Search for an entry\"\n        className=\"search-input\"  \n      />\n    </form>\n  )\n};\n\nexport default Search;\n","import HeaderOne from \"../components/HeaderOne\";\nimport Search from \"../components/Search\";\n\nconst Header = ({ setFilterQuery }) => {\nreturn (\n  <header>\n    <HeaderOne text=\"Phonebook\" />\n    <Search type=\"search\" setFilterQuery={setFilterQuery} />\n  </header>\n  )\n};\n\nexport default Header;\n","const Notification = ({ message }) => {\n  return message.text === null ? \"\" : <div className={message.class}>{message.text}</div>;\n};\n\nexport default Notification;\n","const HeaderTwo = (props) => <h2>{props.text}</h2>;\n\nexport default HeaderTwo;\n","const Input = ({ name, onChange, value, placeholder }) => {\n    return (\n    <>\n      <label htmlFor={name}>Name </label>\n      <input\n      name={name}\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n      />\n    </>\n  )\n}\n;\n\nexport default Input;\n","import HeaderTwo from \"../components/HeaderTwo\";\nimport Input from \"../components/Input\";\n\nconst Form = ({ newPerson, setNewPerson, onSubmit }) => {\n  const handleInput = (event) => {\n    const { name } = event.target;\n    const { value } = event.target;\n    setNewPerson({...newPerson, [name]: value})\n  }\n    return (<>\n    <HeaderTwo text=\"Add a person to phonebook\" />\n    <form className=\"create-form\" onSubmit={onSubmit}>\n      <Input\n        name=\"name\"\n        onChange={handleInput}\n        value={newPerson.name}\n        placeholder=\"Enter a name\"\n      />\n      <Input\n        name=\"number\"\n        onChange={handleInput}\n        value={newPerson.number}\n        placeholder=\"Enter a number\"\n      />\n      <button>Add</button>\n    </form>\n    </>\n  )\n}\n;\n\nexport default Form;\n","import HeaderTwo from \"../components/HeaderTwo\";\n\nconst Persons = ({ persons, deleteFunction }) => {\n  return (\n    <section>\n      <HeaderTwo text=\"Persons in phonebook\" />\n      {persons.map((person) => (\n        <article key={person.name} className=\"person-card\">\n          <p className=\"person-text\">\n        {person.name} - {person.number}\n          </p>\n        <button onClick={() => deleteFunction(person)}>Delete</button>\n        </article>\n      ))}\n    </section>\n  );\n};\n\nexport default Persons;\n","// Imports\nimport React, { useEffect, useState } from \"react\";\nimport personService from \"./services/personService\";\nimport Header from \"./components/Header\";\nimport Notification from \"./components/Notification\";\nimport Form from \"./components/Form\";\nimport Persons from \"./components/Persons\";\nimport \"./App.css\";\n\n// Static functions\nconst searchPersons = (person, filterQuery) => {\n  return person.name.toLowerCase().includes(filterQuery.toLowerCase());\n};\n\nconst windowConfirmForUpdate = (newPerson) => window.confirm(\n  `${newPerson.name} is already added to the phonebook, replace the old number with the new one?`\n  );\n\n  // App component\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterQuery, setFilterQuery] = useState(\"\");\n  const filteredPersons = persons.filter((person) => searchPersons(person, filterQuery));\n  const [newPerson, setNewPerson] = useState({\"name\": \"\", \"number\": \"\"});\n  const [message, setMessage] = useState({\n    text: null,\n    class: \"\",\n  });\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => setPersons(initialPersons)).catch((error) => console.log(\"Error: \", error.message));\n  }, []);\n\n  const isNameAlreadyAdded = () =>\n    persons.find((person) => person.name === newPerson.name) ? true : false;\n\n  const addOrUpdatePerson = (event) => {\n    event.preventDefault();\n    if (isNameAlreadyAdded()) {\n      if (windowConfirmForUpdate(newPerson)) {\n      updateNumber();\n      }\n    } else {\n      addPerson();\n    }\n  }\n\n  const addPerson = () => {\n    if (newPerson.name === \"\" || newPerson.number === \"\") {\n      handleMessage(\"Please, fill the two inputs before add the entry\", \"error\");\n      return;\n    }\n    personService.addPerson({ name: newPerson.name, number: newPerson.number });\n    setPersons([...persons, { name: newPerson.name, number: newPerson.number }]);\n    handleMessage(`Added ${newPerson.name}`, \"info\");\n    setNewPerson({\"name\": \"\", \"number\": \"\"});\n  };\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.deletePerson(person.id);\n      const newPersons = persons.filter(personFromState => personFromState.id !== person.id);\n      setPersons(newPersons);\n      handleMessage(`Information of ${person.name} has already been removed from server`, \"error\");\n    }\n  };\n\n  const updateNumber = () => {\n    const personToUpdate = persons.find((person) => person.name === newPerson.name);\n    const personIndex = persons.findIndex(person => person.name === personToUpdate.name)\n    personService.updatePhone(personToUpdate.id, newPerson.name, newPerson.number);\n    handleMessage(`Information of ${newPerson.name} has been updated from server`, \"info\");\n    const newPersons = [...persons];\n    newPersons[personIndex].number = newPerson.number;\n      setPersons(newPersons);\n  };\n\n  const handleMessage = (messageText, messageClass) => {\n    setMessage({\n      text: messageText,\n      class: messageClass\n    });\n    setTimeout(() => {\n      setMessage({\n        text: null,\n        class: \"\",\n      });\n    }, 3000);\n  }\n\n  return (\n    <>\n      <Header setFilterQuery={setFilterQuery} />\n      <Notification message={message} />\n      <Form\n        newPerson={newPerson}\n        setNewPerson={setNewPerson}\n        onSubmit={addOrUpdatePerson}\n      />\n      <Persons persons={filteredPersons} deleteFunction={deletePerson} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}