{"version":3,"sources":["components/Persons.js","components/Header.js","components/Search.js","components/Form.js","components/Notification.js","services/personService.js","App.js","index.js"],"names":["Persons","persons","deleteFunction","map","person","name","number","onClick","Header","props","text","Search","htmlFor","onChange","function","Form","functionOne","value","valueOne","functionTwo","valueTwo","functionThree","Notification","message","className","class","baseUrl","personService","getAll","axios","get","then","response","data","addPerson","post","deletePerson","personId","delete","updatePhone","personName","personNumber","put","App","useState","setPersons","matchedPersons","setMatchedPersons","newName","setNewName","newNumber","setNewNumber","setMessage","useEffect","initialPersons","isNameAlreadyAdded","find","updateNumber","id","catch","setTimeout","event","personsFiltered","filter","toLowerCase","indexOf","target","preventDefault","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.accffed9.chunk.js","sourcesContent":["const Persons = ({ persons, deleteFunction }) => {\n  return (\n    <div>\n      {persons.map((person) => (\n        <p key={person.name}>\n          {person.name} <span>-</span> <span>{person.number} </span>\n          <button onClick={() => deleteFunction(person)}>Delete</button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","const Header = (props) => <h2>{props.text}</h2>;\n\nexport default Header;\n","const Search = (props) => (\n  <div>\n    <label htmlFor={props.text}>Search name </label>\n    <input name={props.text} onChange={props.function} />\n  </div>\n);\n\nexport default Search;\n","const Form = (props) => (\n  <form>\n    <label htmlFor=\"name\">Name </label>\n    <input name=\"name\" onChange={props.functionOne} value={props.valueOne} />\n    <br />\n    <label htmlFor=\"number\">Number </label>\n    <input name=\"number\" onChange={props.functionTwo} value={props.valueTwo} />\n    <br />\n    <button onClick={props.functionThree}>Add</button>\n  </form>\n);\n\nexport default Form;\n","const Notification = ({ message }) => {\n  if (message.text === null) {\n    return null;\n  }\n\n  return <div className={message.class}>{message.text}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst addPerson = (person) => {\n  axios.post(baseUrl, person);\n  return;\n};\n\nconst deletePerson = (personId) => {\n  axios.delete(`${baseUrl}/${personId}`);\n  return;\n};\n\nconst updatePhone = (personId, personName, personNumber) => {\n  const request = axios.put(`${baseUrl}/${personId}`, {\n    name: personName,\n    number: personNumber,\n  });\n  return request.then((response) => response.data);\n};\n\nconst personService = { getAll, addPerson, deletePerson, updatePhone };\n\nexport default personService;\n","import React, { useEffect, useState } from \"react\";\nimport Persons from \"./components/Persons\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Form from \"./components/Form\";\nimport Notification from \"./components/Notification\";\nimport personService from \"./services/personService\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [matchedPersons, setMatchedPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [message, setMessage] = useState({\n    text: null,\n    class: \"\",\n  });\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => setPersons(initialPersons));\n  }, []);\n\n  useEffect(() => setMatchedPersons(persons), [persons]);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (isNameAlreadyAdded()) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, replace the old number with the new one?`\n        )\n      ) {\n        updateNumber();\n      }\n      return;\n    }\n    personService.addPerson({ name: newName, number: newNumber });\n    personService\n      .getAll()\n      .then((initialPersons) => setPersons(initialPersons))\n      .then(() => {\n        setMessage({\n          text: `Added ${newName}`,\n          class: \"info\",\n        });\n        setTimeout(() => {\n          setMessage({\n            text: null,\n            class: \"\",\n          });\n        }, 3000);\n      });\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.deletePerson(person.id);\n    }\n    personService.getAll().then((initialPersons) => setPersons(initialPersons));\n  };\n\n  const isNameAlreadyAdded = () =>\n    persons.find((person) => person.name === newName);\n\n  const updateNumber = () => {\n    const person = persons.find((person) => person.name === newName);\n    personService.updatePhone(person.id, newName, newNumber).catch(() => {\n      setMessage({\n        text: `Information of ${newName} has already been removed from server`,\n        class: \"error\",\n      });\n      setTimeout(() => {\n        setMessage({\n          text: null,\n          class: \"\",\n        });\n      }, 3000);\n    });\n    personService.getAll().then((initialPersons) => setPersons(initialPersons));\n  };\n\n  const nameHandler = (event) => setNewName(event.target.value);\n  const numberHandler = (event) => setNewNumber(event.target.value);\n\n  const personsHandler = (event) => {\n    const personsFiltered = persons.filter(\n      (person) =>\n        person.name.toLowerCase().indexOf(event.target.value.toLowerCase()) >= 0\n    );\n    setMatchedPersons(personsFiltered);\n  };\n\n  return (\n    <div>\n      <Header text=\"Phonebook\" />\n      <Search text=\"search\" function={personsHandler} />\n      <Header text=\"Add a new one\" />\n      <Notification message={message} />\n      <Form\n        functionOne={nameHandler}\n        valueOne={newName}\n        functionTwo={numberHandler}\n        valueTwo={newNumber}\n        functionThree={addPerson}\n      />\n      <Header text=\"Numbers\" />\n      <Persons persons={matchedPersons} deleteFunction={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}